2022-11-20 08:19:45 [kafka-coordinator-heartbeat-thread | resource-processor] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Received HEARTBEAT response from node 2147483647 for request with header RequestHeader(apiKey=HEARTBEAT, apiVersion=4, clientId=consumer-resource-processor-2, correlationId=67): HeartbeatResponseData(throttleTimeMs=0, errorCode=0)
2022-11-20 08:19:45 [kafka-coordinator-heartbeat-thread | resource-processor] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Received successful Heartbeat response
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Received FETCH response from node 1 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-3, correlationId=70): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1061072146, responses=[])
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Received FETCH response from node 1 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-1, correlationId=71): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=300341165, responses=[])
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Node 1 sent an incremental fetch response with throttleTimeMs = 0 for session 1061072146 with 0 response partition(s), 1 implied partition(s)
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Node 1 sent an incremental fetch response with throttleTimeMs = 0 for session 300341165 with 0 response partition(s), 1 implied partition(s)
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Added READ_COMMITTED fetch request for partition resources-2 at position FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.1.104:9093 (id: 1 rack: null)], epoch=22}} to node 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Added READ_COMMITTED fetch request for partition resources-0 at position FetchPosition{offset=12, offsetEpoch=Optional[24], currentLeader=LeaderAndEpoch{leader=Optional[192.168.1.104:9093 (id: 1 rack: null)], epoch=24}} to node 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Built incremental fetch (sessionId=300341165, epoch=55) for node 1. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Built incremental fetch (sessionId=1061072146, epoch=54) for node 1. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Sending READ_COMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(resources-2), canUseTopicIds=True) to broker 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Sending READ_COMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(resources-0), canUseTopicIds=True) to broker 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-3, correlationId=72) and timeout 30000 to node 1: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=1, sessionId=1061072146, sessionEpoch=54, topics=[], forgottenTopicsData=[], rackId='')
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-1, correlationId=73) and timeout 30000 to node 1: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=1, sessionId=300341165, sessionEpoch=55, topics=[], forgottenTopicsData=[], rackId='')
2022-11-20 08:19:45 [reactor-http-nio-3] DEBUG : [c7ea9f31-1, L:/127.0.0.1:52577 - R:localhost/127.0.0.1:8090] Received last HTTP packet
2022-11-20 08:19:45 [reactor-http-nio-3] DEBUG : [c7ea9f31, L:/127.0.0.1:52577 - R:localhost/127.0.0.1:8090] onStateChange(GET{uri=/api/v1/resources/66, connection=PooledConnection{channel=[id: 0xc7ea9f31, L:/127.0.0.1:52577 - R:localhost/127.0.0.1:8090]}}, [response_completed])
2022-11-20 08:19:45 [reactor-http-nio-3] DEBUG : [c7ea9f31, L:/127.0.0.1:52577 - R:localhost/127.0.0.1:8090] Removed handler: ReadTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.responseTimeoutHandler = io.netty.handler.timeout.ReadTimeoutHandler), (WriteTimeoutHandler = io.netty.handler.timeout.WriteTimeoutHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2022-11-20 08:19:45 [reactor-http-nio-3] DEBUG : [c7ea9f31, L:/127.0.0.1:52577 - R:localhost/127.0.0.1:8090] Removed handler: WriteTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.responseTimeoutHandler = io.netty.handler.timeout.ReadTimeoutHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2022-11-20 08:19:45 [reactor-http-nio-3] DEBUG : [c7ea9f31, L:/127.0.0.1:52577 - R:localhost/127.0.0.1:8090] Removed handler: reactor.left.responseTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2022-11-20 08:19:45 [reactor-http-nio-3] DEBUG : [c7ea9f31, L:/127.0.0.1:52577 - R:localhost/127.0.0.1:8090] onStateChange(GET{uri=/api/v1/resources/66, connection=PooledConnection{channel=[id: 0xc7ea9f31, L:/127.0.0.1:52577 - R:localhost/127.0.0.1:8090]}}, [disconnecting])
2022-11-20 08:19:45 [reactor-http-nio-3] DEBUG : [c7ea9f31, L:/127.0.0.1:52577 - R:localhost/127.0.0.1:8090] Releasing channel
2022-11-20 08:19:45 [reactor-http-nio-3] DEBUG : [c7ea9f31, L:/127.0.0.1:52577 - R:localhost/127.0.0.1:8090] Channel cleaned, now: 0 active connections, 1 inactive connections and 0 pending acquire requests.
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [1d504912] HTTP POST /songs
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost:8091]
2022-11-20 08:19:45 [reactor-http-nio-4] DEBUG : [1b51d2de] Created a new pooled channel, now: 0 active connections, 0 inactive connections and 0 pending acquire requests.
2022-11-20 08:19:45 [reactor-http-nio-4] DEBUG : [1b51d2de] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2022-11-20 08:19:45 [reactor-http-nio-4] DEBUG : [1b51d2de] Connecting to [localhost/127.0.0.1:8091].
2022-11-20 08:19:45 [reactor-http-nio-4] DEBUG : [1b51d2de, L:/127.0.0.1:52578 - R:localhost/127.0.0.1:8091] Registering pool release on close event for channel
2022-11-20 08:19:45 [reactor-http-nio-4] DEBUG : [1b51d2de, L:/127.0.0.1:52578 - R:localhost/127.0.0.1:8091] Channel connected, now: 1 active connections, 0 inactive connections and 0 pending acquire requests.
2022-11-20 08:19:45 [reactor-http-nio-4] DEBUG : [1b51d2de, L:/127.0.0.1:52578 - R:localhost/127.0.0.1:8091] onStateChange(PooledConnection{channel=[id: 0x1b51d2de, L:/127.0.0.1:52578 - R:localhost/127.0.0.1:8091]}, [connected])
2022-11-20 08:19:45 [reactor-http-nio-4] DEBUG : [1b51d2de-1, L:/127.0.0.1:52578 - R:localhost/127.0.0.1:8091] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x1b51d2de, L:/127.0.0.1:52578 - R:localhost/127.0.0.1:8091]}}, [configured])
2022-11-20 08:19:45 [reactor-http-nio-4] DEBUG : [1b51d2de-1, L:/127.0.0.1:52578 - R:localhost/127.0.0.1:8091] Added encoder [ReadTimeoutHandler] at the beginning of the user pipeline, full pipeline: [reactor.left.httpCodec, ReadTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
2022-11-20 08:19:45 [reactor-http-nio-4] DEBUG : [1b51d2de-1, L:/127.0.0.1:52578 - R:localhost/127.0.0.1:8091] Added decoder [WriteTimeoutHandler] at the end of the user pipeline, full pipeline: [reactor.left.httpCodec, ReadTimeoutHandler, WriteTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
2022-11-20 08:19:45 [reactor-http-nio-4] DEBUG : [1b51d2de-1, L:/127.0.0.1:52578 - R:localhost/127.0.0.1:8091] Handler is being applied: {uri=http://localhost:8091/api/v1/songs, method=POST}
2022-11-20 08:19:45 [reactor-http-nio-4] DEBUG : [1b51d2de-1, L:/127.0.0.1:52578 - R:localhost/127.0.0.1:8091] onStateChange(POST{uri=/api/v1/songs, connection=PooledConnection{channel=[id: 0x1b51d2de, L:/127.0.0.1:52578 - R:localhost/127.0.0.1:8091]}}, [request_prepared])
2022-11-20 08:19:45 [reactor-http-nio-4] DEBUG : [1d504912] Encoding [SongRecord{resourceId=66, name='Test of MP3 File', artist='Me', album='Me', length='0:12', year=2006 (truncated)...]
2022-11-20 08:19:45 [reactor-http-nio-4] DEBUG : [1b51d2de-1, L:/127.0.0.1:52578 - R:localhost/127.0.0.1:8091] onStateChange(POST{uri=/api/v1/songs, connection=PooledConnection{channel=[id: 0x1b51d2de, L:/127.0.0.1:52578 - R:localhost/127.0.0.1:8091]}}, [request_sent])
2022-11-20 08:19:45 [reactor-http-nio-4] DEBUG : [1b51d2de-1, L:/127.0.0.1:52578 - R:localhost/127.0.0.1:8091] Added encoder [reactor.left.responseTimeoutHandler] at the beginning of the user pipeline, full pipeline: [reactor.left.httpCodec, reactor.left.responseTimeoutHandler, ReadTimeoutHandler, WriteTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Received FETCH response from node 1 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-3, correlationId=72): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=1061072146, responses=[])
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Received FETCH response from node 1 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-1, correlationId=73): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=300341165, responses=[])
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Node 1 sent an incremental fetch response with throttleTimeMs = 0 for session 1061072146 with 0 response partition(s), 1 implied partition(s)
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Node 1 sent an incremental fetch response with throttleTimeMs = 0 for session 300341165 with 0 response partition(s), 1 implied partition(s)
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Added READ_COMMITTED fetch request for partition resources-0 at position FetchPosition{offset=12, offsetEpoch=Optional[24], currentLeader=LeaderAndEpoch{leader=Optional[192.168.1.104:9093 (id: 1 rack: null)], epoch=24}} to node 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Added READ_COMMITTED fetch request for partition resources-2 at position FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.1.104:9093 (id: 1 rack: null)], epoch=22}} to node 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Built incremental fetch (sessionId=1061072146, epoch=55) for node 1. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Sending READ_COMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(resources-2), canUseTopicIds=True) to broker 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Built incremental fetch (sessionId=300341165, epoch=56) for node 1. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-3, correlationId=73) and timeout 30000 to node 1: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=1, sessionId=1061072146, sessionEpoch=55, topics=[], forgottenTopicsData=[], rackId='')
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Sending READ_COMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(resources-0), canUseTopicIds=True) to broker 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 08:19:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-1, correlationId=74) and timeout 30000 to node 1: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=1, sessionId=300341165, sessionEpoch=56, topics=[], forgottenTopicsData=[], rackId='')
