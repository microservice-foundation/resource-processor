2022-11-20 07:55:59 [reactor-http-nio-5] DEBUG : [52909582-1, L:/127.0.0.1:51956 - R:localhost/127.0.0.1:8090] Received response (auto-read:false) : [Content-Type=audio/mpeg, Transfer-Encoding=chunked, Date=Sun, 20 Nov 2022 02:55:58 GMT]
2022-11-20 07:55:59 [reactor-http-nio-5] DEBUG : [52909582-1, L:/127.0.0.1:51956 - R:localhost/127.0.0.1:8090] onStateChange(GET{uri=/api/v1/resources/56, connection=PooledConnection{channel=[id: 0x52909582, L:/127.0.0.1:51956 - R:localhost/127.0.0.1:8090]}}, [response_received])
2022-11-20 07:55:59 [reactor-http-nio-5] DEBUG : [5abb786c] [52909582-1, L:/127.0.0.1:51956 - R:localhost/127.0.0.1:8090] Response 200 OK
2022-11-20 07:55:59 [reactor-http-nio-5] DEBUG : [52909582-1, L:/127.0.0.1:51956 - R:localhost/127.0.0.1:8090] FluxReceive{pending=0, cancelled=false, inboundDone=false, inboundError=null}: subscribing inbound receiver
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Received FETCH response from node 1 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-3, correlationId=300): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=695364650, responses=[])
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Node 1 sent an incremental fetch response with throttleTimeMs = 0 for session 695364650 with 0 response partition(s), 1 implied partition(s)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Added READ_COMMITTED fetch request for partition resources-2 at position FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.1.104:9093 (id: 1 rack: null)], epoch=22}} to node 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Built incremental fetch (sessionId=695364650, epoch=250) for node 1. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Sending READ_COMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(resources-2), canUseTopicIds=True) to broker 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-3, correlationId=301) and timeout 30000 to node 1: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=1, sessionId=695364650, sessionEpoch=250, topics=[], forgottenTopicsData=[], rackId='')
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Received FETCH response from node 1 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-2, correlationId=300): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=3785473, responses=[])
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Node 1 sent an incremental fetch response with throttleTimeMs = 0 for session 3785473 with 0 response partition(s), 1 implied partition(s)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Added READ_COMMITTED fetch request for partition resources-1 at position FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.1.104:9093 (id: 1 rack: null)], epoch=25}} to node 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Built incremental fetch (sessionId=3785473, epoch=250) for node 1. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Sending READ_COMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(resources-1), canUseTopicIds=True) to broker 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-2, correlationId=301) and timeout 30000 to node 1: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=1, sessionId=3785473, sessionEpoch=250, topics=[], forgottenTopicsData=[], rackId='')
2022-11-20 07:55:59 [reactor-http-nio-5] DEBUG : [52909582-1, L:/127.0.0.1:51956 - R:localhost/127.0.0.1:8090] Received last HTTP packet
2022-11-20 07:55:59 [reactor-http-nio-5] DEBUG : [52909582, L:/127.0.0.1:51956 - R:localhost/127.0.0.1:8090] onStateChange(GET{uri=/api/v1/resources/56, connection=PooledConnection{channel=[id: 0x52909582, L:/127.0.0.1:51956 - R:localhost/127.0.0.1:8090]}}, [response_completed])
2022-11-20 07:55:59 [reactor-http-nio-5] DEBUG : [52909582, L:/127.0.0.1:51956 - R:localhost/127.0.0.1:8090] Removed handler: ReadTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.responseTimeoutHandler = io.netty.handler.timeout.ReadTimeoutHandler), (WriteTimeoutHandler = io.netty.handler.timeout.WriteTimeoutHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2022-11-20 07:55:59 [reactor-http-nio-5] DEBUG : [52909582, L:/127.0.0.1:51956 - R:localhost/127.0.0.1:8090] Removed handler: WriteTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.responseTimeoutHandler = io.netty.handler.timeout.ReadTimeoutHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2022-11-20 07:55:59 [reactor-http-nio-5] DEBUG : [52909582, L:/127.0.0.1:51956 - R:localhost/127.0.0.1:8090] Removed handler: reactor.left.responseTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2022-11-20 07:55:59 [reactor-http-nio-5] DEBUG : [52909582, L:/127.0.0.1:51956 - R:localhost/127.0.0.1:8090] onStateChange(GET{uri=/api/v1/resources/56, connection=PooledConnection{channel=[id: 0x52909582, L:/127.0.0.1:51956 - R:localhost/127.0.0.1:8090]}}, [disconnecting])
2022-11-20 07:55:59 [reactor-http-nio-5] DEBUG : [52909582, L:/127.0.0.1:51956 - R:localhost/127.0.0.1:8090] Releasing channel
2022-11-20 07:55:59 [reactor-http-nio-5] DEBUG : [52909582, L:/127.0.0.1:51956 - R:localhost/127.0.0.1:8090] Channel cleaned, now: 0 active connections, 1 inactive connections and 0 pending acquire requests.
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [2d913716] HTTP POST /songs
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b] Created a new pooled channel, now: 0 active connections, 0 inactive connections and 0 pending acquire requests.
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b] Connecting to [localhost/127.0.0.1:8091].
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] Registering pool release on close event for channel
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] Channel connected, now: 1 active connections, 0 inactive connections and 0 pending acquire requests.
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] onStateChange(PooledConnection{channel=[id: 0x2f3cb95b, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091]}, [connected])
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b-1, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0x2f3cb95b, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091]}}, [configured])
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b-1, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] Added encoder [ReadTimeoutHandler] at the beginning of the user pipeline, full pipeline: [reactor.left.httpCodec, ReadTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b-1, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] Added decoder [WriteTimeoutHandler] at the end of the user pipeline, full pipeline: [reactor.left.httpCodec, ReadTimeoutHandler, WriteTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b-1, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] Handler is being applied: {uri=http://localhost:8091/api/v1/songs, method=POST}
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b-1, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] onStateChange(POST{uri=/api/v1/songs, connection=PooledConnection{channel=[id: 0x2f3cb95b, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091]}}, [request_prepared])
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2d913716] Encoding [SongRecord{resourceId=56, name='Test of MP3 File', artist='Me', album='Me', length='0:12', year=2006 (truncated)...]
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b-1, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] onStateChange(POST{uri=/api/v1/songs, connection=PooledConnection{channel=[id: 0x2f3cb95b, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091]}}, [request_sent])
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b-1, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] Added encoder [reactor.left.responseTimeoutHandler] at the beginning of the user pipeline, full pipeline: [reactor.left.httpCodec, reactor.left.responseTimeoutHandler, ReadTimeoutHandler, WriteTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b-1, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] Received response (auto-read:false) : [Content-Type=application/json, Transfer-Encoding=chunked, Date=Sun, 20 Nov 2022 02:55:59 GMT]
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b-1, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] onStateChange(POST{uri=/api/v1/songs, connection=PooledConnection{channel=[id: 0x2f3cb95b, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091]}}, [response_received])
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2d913716] [2f3cb95b-1, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] Response 201 CREATED
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b-1, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] FluxReceive{pending=0, cancelled=false, inboundDone=false, inboundError=null}: subscribing inbound receiver
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b-1, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] Received last HTTP packet
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2d913716] [2f3cb95b-1, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] Decoded [com.epam.training.microservicefoundation.resourceprocessor.domain.SongRecordId@5d583211]
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] onStateChange(POST{uri=/api/v1/songs, connection=PooledConnection{channel=[id: 0x2f3cb95b, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091]}}, [response_completed])
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] Removed handler: ReadTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.responseTimeoutHandler = io.netty.handler.timeout.ReadTimeoutHandler), (WriteTimeoutHandler = io.netty.handler.timeout.WriteTimeoutHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : Commit list: {resources-0=OffsetAndMetadata{offset=9, leaderEpoch=null, metadata=''}}
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] Removed handler: WriteTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.responseTimeoutHandler = io.netty.handler.timeout.ReadTimeoutHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : Committing: {resources-0=OffsetAndMetadata{offset=9, leaderEpoch=null, metadata=''}}
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] Removed handler: reactor.left.responseTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] onStateChange(POST{uri=/api/v1/songs, connection=PooledConnection{channel=[id: 0x2f3cb95b, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091]}}, [disconnecting])
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] Releasing channel
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Sending OFFSET_COMMIT request with header RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=8, clientId=consumer-resource-processor-1, correlationId=292) and timeout 30000 to node 2147483647: OffsetCommitRequestData(groupId='resource-processor', generationId=61, memberId='consumer-resource-processor-1-832fa964-7b31-4490-8045-29f7c4c70b60', groupInstanceId=null, retentionTimeMs=-1, topics=[OffsetCommitRequestTopic(name='resources', partitions=[OffsetCommitRequestPartition(partitionIndex=0, committedOffset=9, committedLeaderEpoch=-1, commitTimestamp=-1, committedMetadata='')])])
2022-11-20 07:55:59 [reactor-http-nio-6] DEBUG : [2f3cb95b, L:/127.0.0.1:51957 - R:localhost/127.0.0.1:8091] Channel cleaned, now: 0 active connections, 1 inactive connections and 0 pending acquire requests.
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Received OFFSET_COMMIT response from node 2147483647 for request with header RequestHeader(apiKey=OFFSET_COMMIT, apiVersion=8, clientId=consumer-resource-processor-1, correlationId=292): OffsetCommitResponseData(throttleTimeMs=0, topics=[OffsetCommitResponseTopic(name='resources', partitions=[OffsetCommitResponsePartition(partitionIndex=0, errorCode=0)])])
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Committed offset 9 for partition resources-0
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Added READ_COMMITTED fetch request for partition resources-0 at position FetchPosition{offset=10, offsetEpoch=Optional[24], currentLeader=LeaderAndEpoch{leader=Optional[192.168.1.104:9093 (id: 1 rack: null)], epoch=24}} to node 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Built incremental fetch (sessionId=1674441333, epoch=240) for node 1. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Sending READ_COMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(resources-0), canUseTopicIds=True) to broker 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-1, groupId=resource-processor] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-1, correlationId=293) and timeout 30000 to node 1: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=1, sessionId=1674441333, sessionEpoch=240, topics=[], forgottenTopicsData=[], rackId='')
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Received FETCH response from node 1 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-3, correlationId=301): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=695364650, responses=[])
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Node 1 sent an incremental fetch response with throttleTimeMs = 0 for session 695364650 with 0 response partition(s), 1 implied partition(s)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Added READ_COMMITTED fetch request for partition resources-2 at position FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.1.104:9093 (id: 1 rack: null)], epoch=22}} to node 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Built incremental fetch (sessionId=695364650, epoch=251) for node 1. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Sending READ_COMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(resources-2), canUseTopicIds=True) to broker 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-3, correlationId=302) and timeout 30000 to node 1: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=1, sessionId=695364650, sessionEpoch=251, topics=[], forgottenTopicsData=[], rackId='')
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Received FETCH response from node 1 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-2, correlationId=301): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=3785473, responses=[])
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Node 1 sent an incremental fetch response with throttleTimeMs = 0 for session 3785473 with 0 response partition(s), 1 implied partition(s)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Added READ_COMMITTED fetch request for partition resources-1 at position FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.1.104:9093 (id: 1 rack: null)], epoch=25}} to node 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Built incremental fetch (sessionId=3785473, epoch=251) for node 1. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Sending READ_COMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(resources-1), canUseTopicIds=True) to broker 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-2, correlationId=302) and timeout 30000 to node 1: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=1, sessionId=3785473, sessionEpoch=251, topics=[], forgottenTopicsData=[], rackId='')
