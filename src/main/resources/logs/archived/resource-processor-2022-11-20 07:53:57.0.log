2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : Received: 0 records
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : Commit list: {}
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : Received: 0 records
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : Commit list: {}
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Received FETCH response from node 1 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-2, correlationId=18): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=3785473, responses=[])
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Node 1 sent an incremental fetch response with throttleTimeMs = 0 for session 3785473 with 0 response partition(s), 1 implied partition(s)
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Received FETCH response from node 1 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-3, correlationId=18): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=695364650, responses=[])
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Node 1 sent an incremental fetch response with throttleTimeMs = 0 for session 695364650 with 0 response partition(s), 1 implied partition(s)
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Added READ_COMMITTED fetch request for partition resources-1 at position FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.1.104:9093 (id: 1 rack: null)], epoch=25}} to node 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Built incremental fetch (sessionId=3785473, epoch=9) for node 1. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Sending READ_COMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(resources-1), canUseTopicIds=True) to broker 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-2, correlationId=19) and timeout 30000 to node 1: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=1, sessionId=3785473, sessionEpoch=9, topics=[], forgottenTopicsData=[], rackId='')
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Added READ_COMMITTED fetch request for partition resources-2 at position FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.1.104:9093 (id: 1 rack: null)], epoch=22}} to node 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Built incremental fetch (sessionId=695364650, epoch=9) for node 1. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Sending READ_COMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(resources-2), canUseTopicIds=True) to broker 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-3, correlationId=19) and timeout 30000 to node 1: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=1, sessionId=695364650, sessionEpoch=9, topics=[], forgottenTopicsData=[], rackId='')
2022-11-20 07:53:57 [reactor-http-nio-3] DEBUG : [d6312c77-1, L:/127.0.0.1:51879 - R:localhost/127.0.0.1:8090] Received response (auto-read:false) : [Content-Type=audio/mpeg, Transfer-Encoding=chunked, Date=Sun, 20 Nov 2022 02:53:57 GMT]
2022-11-20 07:53:57 [reactor-http-nio-3] DEBUG : [d6312c77-1, L:/127.0.0.1:51879 - R:localhost/127.0.0.1:8090] onStateChange(GET{uri=/api/v1/resources/52, connection=PooledConnection{channel=[id: 0xd6312c77, L:/127.0.0.1:51879 - R:localhost/127.0.0.1:8090]}}, [response_received])
2022-11-20 07:53:57 [reactor-http-nio-3] DEBUG : [4e272997] [d6312c77-1, L:/127.0.0.1:51879 - R:localhost/127.0.0.1:8090] Response 200 OK
2022-11-20 07:53:57 [reactor-http-nio-3] DEBUG : [d6312c77-1, L:/127.0.0.1:51879 - R:localhost/127.0.0.1:8090] FluxReceive{pending=0, cancelled=false, inboundDone=false, inboundError=null}: subscribing inbound receiver
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Received FETCH response from node 1 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-2, correlationId=19): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=3785473, responses=[])
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Received FETCH response from node 1 for request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-3, correlationId=19): FetchResponseData(throttleTimeMs=0, errorCode=0, sessionId=695364650, responses=[])
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Node 1 sent an incremental fetch response with throttleTimeMs = 0 for session 695364650 with 0 response partition(s), 1 implied partition(s)
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Node 1 sent an incremental fetch response with throttleTimeMs = 0 for session 3785473 with 0 response partition(s), 1 implied partition(s)
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Added READ_COMMITTED fetch request for partition resources-1 at position FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.1.104:9093 (id: 1 rack: null)], epoch=25}} to node 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Added READ_COMMITTED fetch request for partition resources-2 at position FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.1.104:9093 (id: 1 rack: null)], epoch=22}} to node 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Built incremental fetch (sessionId=3785473, epoch=10) for node 1. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Built incremental fetch (sessionId=695364650, epoch=10) for node 1. Added 0 partition(s), altered 0 partition(s), removed 0 partition(s), replaced 0 partition(s) out of 1 partition(s)
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Sending READ_COMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(resources-1), canUseTopicIds=True) to broker 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Sending READ_COMMITTED IncrementalFetchRequest(toSend=(), toForget=(), toReplace=(), implied=(resources-2), canUseTopicIds=True) to broker 192.168.1.104:9093 (id: 1 rack: null)
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-3, groupId=resource-processor] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-3, correlationId=20) and timeout 30000 to node 1: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=1, sessionId=695364650, sessionEpoch=10, topics=[], forgottenTopicsData=[], rackId='')
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] DEBUG : [Consumer clientId=consumer-resource-processor-2, groupId=resource-processor] Sending FETCH request with header RequestHeader(apiKey=FETCH, apiVersion=13, clientId=consumer-resource-processor-2, correlationId=20) and timeout 30000 to node 1: FetchRequestData(clusterId=null, replicaId=-1, maxWaitMs=500, minBytes=1, maxBytes=52428800, isolationLevel=1, sessionId=3785473, sessionEpoch=10, topics=[], forgottenTopicsData=[], rackId='')
2022-11-20 07:53:57 [reactor-http-nio-3] DEBUG : [d6312c77-1, L:/127.0.0.1:51879 - R:localhost/127.0.0.1:8090] Received last HTTP packet
2022-11-20 07:53:57 [reactor-http-nio-3] DEBUG : [d6312c77, L:/127.0.0.1:51879 - R:localhost/127.0.0.1:8090] onStateChange(GET{uri=/api/v1/resources/52, connection=PooledConnection{channel=[id: 0xd6312c77, L:/127.0.0.1:51879 - R:localhost/127.0.0.1:8090]}}, [response_completed])
2022-11-20 07:53:57 [reactor-http-nio-3] DEBUG : [d6312c77, L:/127.0.0.1:51879 - R:localhost/127.0.0.1:8090] Removed handler: ReadTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.responseTimeoutHandler = io.netty.handler.timeout.ReadTimeoutHandler), (WriteTimeoutHandler = io.netty.handler.timeout.WriteTimeoutHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2022-11-20 07:53:57 [reactor-http-nio-3] DEBUG : [d6312c77, L:/127.0.0.1:51879 - R:localhost/127.0.0.1:8090] Removed handler: WriteTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.responseTimeoutHandler = io.netty.handler.timeout.ReadTimeoutHandler), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2022-11-20 07:53:57 [reactor-http-nio-3] DEBUG : [d6312c77, L:/127.0.0.1:51879 - R:localhost/127.0.0.1:8090] Removed handler: reactor.left.responseTimeoutHandler, pipeline: DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2022-11-20 07:53:57 [reactor-http-nio-3] DEBUG : [d6312c77, L:/127.0.0.1:51879 - R:localhost/127.0.0.1:8090] onStateChange(GET{uri=/api/v1/resources/52, connection=PooledConnection{channel=[id: 0xd6312c77, L:/127.0.0.1:51879 - R:localhost/127.0.0.1:8090]}}, [disconnecting])
2022-11-20 07:53:57 [reactor-http-nio-3] DEBUG : [d6312c77, L:/127.0.0.1:51879 - R:localhost/127.0.0.1:8090] Releasing channel
2022-11-20 07:53:57 [reactor-http-nio-3] DEBUG : [d6312c77, L:/127.0.0.1:51879 - R:localhost/127.0.0.1:8090] Channel cleaned, now: 0 active connections, 1 inactive connections and 0 pending acquire requests.
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : [1f92b88e] HTTP POST /songs
2022-11-20 07:53:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG : Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [localhost:8091]
2022-11-20 07:53:57 [reactor-http-nio-4] DEBUG : [bee7aa68] Created a new pooled channel, now: 0 active connections, 0 inactive connections and 0 pending acquire requests.
2022-11-20 07:53:57 [reactor-http-nio-4] DEBUG : [bee7aa68] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
2022-11-20 07:53:57 [reactor-http-nio-4] DEBUG : [bee7aa68] Connecting to [localhost/127.0.0.1:8091].
2022-11-20 07:53:57 [reactor-http-nio-4] DEBUG : [bee7aa68, L:/127.0.0.1:51891 - R:localhost/127.0.0.1:8091] Registering pool release on close event for channel
2022-11-20 07:53:57 [reactor-http-nio-4] DEBUG : [bee7aa68, L:/127.0.0.1:51891 - R:localhost/127.0.0.1:8091] Channel connected, now: 1 active connections, 0 inactive connections and 0 pending acquire requests.
2022-11-20 07:53:57 [reactor-http-nio-4] DEBUG : [bee7aa68, L:/127.0.0.1:51891 - R:localhost/127.0.0.1:8091] onStateChange(PooledConnection{channel=[id: 0xbee7aa68, L:/127.0.0.1:51891 - R:localhost/127.0.0.1:8091]}, [connected])
2022-11-20 07:53:57 [reactor-http-nio-4] DEBUG : [bee7aa68-1, L:/127.0.0.1:51891 - R:localhost/127.0.0.1:8091] onStateChange(GET{uri=/, connection=PooledConnection{channel=[id: 0xbee7aa68, L:/127.0.0.1:51891 - R:localhost/127.0.0.1:8091]}}, [configured])
2022-11-20 07:53:57 [reactor-http-nio-4] DEBUG : [bee7aa68-1, L:/127.0.0.1:51891 - R:localhost/127.0.0.1:8091] Added encoder [ReadTimeoutHandler] at the beginning of the user pipeline, full pipeline: [reactor.left.httpCodec, ReadTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
2022-11-20 07:53:57 [reactor-http-nio-4] DEBUG : [bee7aa68-1, L:/127.0.0.1:51891 - R:localhost/127.0.0.1:8091] Added decoder [WriteTimeoutHandler] at the end of the user pipeline, full pipeline: [reactor.left.httpCodec, ReadTimeoutHandler, WriteTimeoutHandler, reactor.right.reactiveBridge, DefaultChannelPipeline$TailContext#0]
2022-11-20 07:53:57 [reactor-http-nio-4] DEBUG : [bee7aa68-1, L:/127.0.0.1:51891 - R:localhost/127.0.0.1:8091] Handler is being applied: {uri=http://localhost:8091/api/v1/songs, method=POST}
2022-11-20 07:53:57 [reactor-http-nio-4] DEBUG : [bee7aa68-1, L:/127.0.0.1:51891 - R:localhost/127.0.0.1:8091] onStateChange(POST{uri=/api/v1/songs, connection=PooledConnection{channel=[id: 0xbee7aa68, L:/127.0.0.1:51891 - R:localhost/127.0.0.1:8091]}}, [request_prepared])
